{"ast":null,"code":"import _defineProperty from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from'axios';import{useState}from'react';import Modal from'react-modal';import{URL}from'../config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";Modal.setAppElement('#root');export default function EditProfile(props){//first receive user obj through props\n//to update user obj in app.js need to update setter \n//form to enter new details\n//user passes new data \n//onSubmit update the user state in app.js through props.setUser setter method\n//inside same funct use \n//delete account - confirmation modal external library - send response to client logout client and delete token and send to homepage \n//update pw - follow steps for authentication again. Ask for current pw, newpw, send to back end, verify first pw through hashing and if match, update with new hashed pw following steps for signing up \nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalIsOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState({username:'',old_pw:'',new_pw:'',new_pw2:''}),_useState6=_slicedToArray(_useState5,2),form=_useState6[0],setForm=_useState6[1];var deleteHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"\".concat(URL,\"/user/delete\"),{id:props.user._id});case 3:res=_context.sent;props.logout();_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return function deleteHandler(){return _ref.apply(this,arguments);};}();var handleChange=function handleChange(e){setForm(_objectSpread(_objectSpread({},form),{},_defineProperty({},e.target.name,e.target.value)));};var handleUsernameChange=function handleUsernameChange(){// form.username is not empty\nconsole.log(form.username);props.updateUser('username',form.username);};var handlePwChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.post(\"\".concat(URL,\"/user/updatepw\"),{old_pw:form.old_pw,new_pw:form.new_pw,new_pw2:form.new_pw2,email:props.user.email});case 3:res=_context2.sent;console.log(res);_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}},_callee2,null,[[0,7]]);}));return function handlePwChange(){return _ref2.apply(this,arguments);};}();var customStyles={content:{top:'50%',left:'50%',right:'auto',bottom:'auto',marginRight:'-50%',transform:'translate(-50%, -50%)'}};return/*#__PURE__*/_jsxs(\"div\",{className:\"maineditprofilediv\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"epbackgroundimg\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"editprofileform\",children:[/*#__PURE__*/_jsx(\"img\",{alt:\"black user icon\",className:\"epuser-icon\",src:\"userblk.png\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Current username: \",props.user.username]}),/*#__PURE__*/_jsxs(\"div\",{className:\"epinfosplit\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"epusernamediv\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"eplabel\",children:\"New username \"}),/*#__PURE__*/_jsx(\"input\",{className:\"epinput\",name:\"username\",placeholder:\"type new username here\",onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"epinfoBtns\",onClick:handleUsernameChange,children:\"Update username\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"eppwdiv\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"eplabel\",children:\"Password \"}),/*#__PURE__*/_jsx(\"input\",{className:\"epinput\",name:\"old_pw\",type:\"password\",placeholder:\"type old password\",onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{className:\"epinput\",name:\"new_pw\",type:\"password\",placeholder:\"type new password\",onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{className:\"epinput\",name:\"new_pw2\",type:\"password\",placeholder:\"confirm new password\",onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"epinfoBtns\",onClick:handlePwChange,children:\"Update password\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"deleteBtn\",onClick:function onClick(){return setIsOpen(true);},children:\"Delete account\"})]}),/*#__PURE__*/_jsxs(Modal,{isOpen:modalIsOpen,onRequestClose:function onRequestClose(){return setIsOpen(false);},style:customStyles,contentLabel:\"Modal for delete account confirmation\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Are you sure you wish to proceed? This action will premanently delete your account.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setIsOpen(false);},children:\"Cancel \"}),/*#__PURE__*/_jsx(\"button\",{onClick:deleteHandler,children:\"OK\"})]})]});}","map":{"version":3,"names":["axios","useState","Modal","URL","jsx","_jsx","jsxs","_jsxs","setAppElement","EditProfile","props","_useState","_useState2","_slicedToArray","modalIsOpen","setIsOpen","_useState3","_useState4","message","setMessage","_useState5","username","old_pw","new_pw","new_pw2","_useState6","form","setForm","deleteHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","post","concat","id","user","_id","sent","logout","t0","console","error","stop","apply","arguments","handleChange","e","_objectSpread","_defineProperty","target","name","value","handleUsernameChange","log","updateUser","handlePwChange","_ref2","_callee2","_callee2$","_context2","email","customStyles","content","top","left","right","bottom","marginRight","transform","className","children","alt","src","placeholder","onChange","onClick","type","isOpen","onRequestClose","style","contentLabel"],"sources":["/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/src/views/EditProfile.js"],"sourcesContent":["import axios from 'axios'\nimport { useState } from 'react'\nimport Modal from 'react-modal'\n\nimport { URL } from '../config'\n\nModal.setAppElement('#root')\nexport default function EditProfile(props) {\n    //first receive user obj through props\n    //to update user obj in app.js need to update setter \n    //form to enter new details\n    //user passes new data \n    //onSubmit update the user state in app.js through props.setUser setter method\n    //inside same funct use \n    //delete account - confirmation modal external library - send response to client logout client and delete token and send to homepage \n    //update pw - follow steps for authentication again. Ask for current pw, newpw, send to back end, verify first pw through hashing and if match, update with new hashed pw following steps for signing up \n\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [message, setMessage] = useState('')\n    const [form, setForm] = useState({\n        username: '',\n        old_pw: '',\n        new_pw: '',\n        new_pw2: ''\n    })\n\n    const deleteHandler = async () => {\n        try {\n            const res = await axios.post(`${URL}/user/delete`, { id: props.user._id })\n            props.logout();\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n    const handleChange = e => {\n        setForm({ ...form, [e.target.name]: e.target.value })\n    }\n\n    const handleUsernameChange = () => {\n        // form.username is not empty\n        console.log(form.username);\n        props.updateUser('username', form.username)\n    }\n\n    const handlePwChange = async () => {\n        try {\n            const res = await axios.post(`${URL}/user/updatepw`, {\n                old_pw: form.old_pw,\n                new_pw: form.new_pw,\n                new_pw2: form.new_pw2,\n                email: props.user.email\n            })\n            console.log(res)\n\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    return <div className='maineditprofilediv'>\n        <div className='epbackgroundimg'>\n        </div>\n\n        <form className=\"editprofileform\">\n            <img alt='black user icon'\n                className='epuser-icon'\n                src='userblk.png' />\n            <p>Current username: {props.user.username}</p>\n            <div className='epinfosplit'>\n                <div className='epusernamediv'>\n                    <label className='eplabel'>New username </label>\n                    <input className='epinput' name='username' placeholder=\"type new username here\" onChange={handleChange} />\n                    <button className='epinfoBtns' onClick={handleUsernameChange}>\n                        Update username\n                    </button>\n                </div>\n                <div className='eppwdiv'>\n                    <label className='eplabel'>Password </label>\n                    <input className='epinput' name='old_pw' type='password' placeholder='type old password' onChange={handleChange} />\n                    <input className='epinput' name='new_pw' type='password' placeholder=\"type new password\" onChange={handleChange} />\n                    <input className='epinput' name='new_pw2' type='password' placeholder='confirm new password' onChange={handleChange} />\n                    <button className='epinfoBtns' onClick={handlePwChange}>\n                        Update password\n                    </button>\n                </div>\n            </div>\n                <button className='deleteBtn' onClick={() => setIsOpen(true)}>\n                    Delete account\n                </button>\n        </form>\n        <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={() => setIsOpen(false)}\n            style={customStyles}\n            contentLabel=\"Modal for delete account confirmation\"\n        >\n            <h1>Are you sure you wish to proceed? This action will premanently delete your account.</h1>\n            <button onClick={() => setIsOpen(false)}>Cancel </button>\n            <button onClick={deleteHandler}>OK</button>\n        </Modal>\n\n    </div>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}