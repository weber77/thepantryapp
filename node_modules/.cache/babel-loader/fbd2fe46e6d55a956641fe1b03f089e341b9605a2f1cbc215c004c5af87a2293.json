{"ast":null,"code":"import _regeneratorRuntime from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{useLocation}from'react-router-dom';import axios from'axios';import Recipe from'../components/Recipe.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Recipes(props){//check if we have props or not; if props no location used and instead line 23 below\n//have to put pantry list from props \n//if data comes from props inside URL there should be pantry list \n//check API docs to see how to pass several keywords in search -- integrated feature \nvar location=useLocation();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),recipes=_useState4[0],setRecipes=_useState4[1];var locationSearch=location.search.replace('?','');var callToAPI=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e,locSearch){var url,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0://receives keywords \ne&&e.preventDefault();url=\"https://api.edamam.com/api/recipes/v2?type=public&beta=true&q=\".concat(locSearch?locationSearch:searchTerm,\"&app_id=\").concat(process.env.REACT_APP_EDAMAM_APP_ID,\"&app_key=\").concat(process.env.REACT_APP_EDAMAM_APP_KEY);_context.next=4;return axios.get(url,{headers:{'Origin':'https://thepantryapp.herokuapp.com/'}});case 4:res=_context.sent;setRecipes(res.data.hits);try{}catch(err){console.error(err);}case 7:case\"end\":return _context.stop();}},_callee);}));return function callToAPI(_x,_x2){return _ref.apply(this,arguments);};}();useEffect(function(){//decide which keywords to send to callToAPI\n//3rd option if there's something in props tell API what you're searching for\nif(locationSearch){callToAPI(null,true);}},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"mainrecipessearchdiv\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:callToAPI,className:\"recipesform\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Recipes\"}),/*#__PURE__*/_jsx(\"input\",{type:\"search\",onChange:function onChange(e){return setSearchTerm(e.target.value);},placeholder:\"Let's find a recipe\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"reciperesults\",children:recipes.map(function(recipe,i){return/*#__PURE__*/_jsx(Recipe,{recipe:recipe});})})]});}","map":{"version":3,"names":["useState","useEffect","useLocation","axios","Recipe","jsx","_jsx","jsxs","_jsxs","Recipes","props","location","_useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","recipes","setRecipes","locationSearch","search","replace","callToAPI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","locSearch","url","res","wrap","_callee$","_context","prev","next","preventDefault","concat","process","env","REACT_APP_EDAMAM_APP_ID","REACT_APP_EDAMAM_APP_KEY","get","headers","sent","data","hits","err","console","error","stop","_x","_x2","apply","arguments","className","children","onSubmit","type","onChange","target","value","placeholder","map","recipe","i"],"sources":["/Users/desireelagerquist/Documents/Coding/BCS/projects/thepantryapp/src/views/Recipes.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Recipe from '../components/Recipe.js'\n\nexport default function Recipes(props) {\n//check if we have props or not; if props no location used and instead line 23 below\n//have to put pantry list from props \n//if data comes from props inside URL there should be pantry list \n//check API docs to see how to pass several keywords in search -- integrated feature \n    let location = useLocation();\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [recipes, setRecipes] = useState([])\n\n    let locationSearch = location.search.replace('?', '')\n\n\n    const callToAPI = async (e, locSearch) => {//receives keywords \n        e && e.preventDefault();\n        const url = `https://api.edamam.com/api/recipes/v2?type=public&beta=true&q=${locSearch\n            ? locationSearch\n            : searchTerm}&app_id=${process.env.REACT_APP_EDAMAM_APP_ID}&app_key=${process.env.REACT_APP_EDAMAM_APP_KEY}`\n        const res = await axios.get(url, {\n            headers: {'Origin': 'https://thepantryapp.herokuapp.com/'}\n        })\n        setRecipes(res.data.hits)\n        try {\n\n        } catch (err) {\n            console.error(err)\n        }\n\n    }\n\n    useEffect(() => {//decide which keywords to send to callToAPI\n        //3rd option if there's something in props tell API what you're searching for\n        if (locationSearch) {\n            callToAPI(null, true)\n        }\n    }, [])\n\n\n\n\n\n    return (\n        <div className='mainrecipessearchdiv'>\n            <form onSubmit={callToAPI} className='recipesform'>\n                <h1>Recipes</h1>\n                <input\n                    type='search'\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    placeholder=\"Let's find a recipe\" />\n            </form>\n            <br />\n            <br />\n            <div className='reciperesults'>\n                {recipes.map((recipe, i) => <Recipe recipe={recipe} />)}\n            </div>\n\n\n\n\n        </div>)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}